buildscript {
    repositories {
        jcenter()
        maven { url "https://dl.bintray.com/epam/reportportal" }
    }
}

plugins {
    id 'java'
    id "org.sonarqube" version "4.3.1.3277"
}

String buildWorkspace = System.getenv('WORKSPACE')
if (buildWorkspace == null) {
    buildWorkspace = 'build'
    File buildWorkspaceFolder = new File(buildWorkspace)
    if (buildWorkspaceFolder.exists()) {
        delete(buildWorkspaceFolder)
        buildWorkspaceFolder.mkdir()
    }
}

buildDir = buildWorkspace + '/compiled'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

configurations {
    testCompile
}

sonar {
    properties {
        property "sonar.projectKey", "atm-adv"
        property "sonar.organization", "atm-adv"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.token", "sqp_81bc70c36ae78b76c2d244b67511f22146021ccf"
    }
}

dependencies {
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    implementation group: 'org.testng', name: 'testng', version: '7.4.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    implementation group: 'org.assertj', name: 'assertj-core', version: '3.23.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.13.0'
    implementation group: 'org.awaitility', name: 'awaitility', version: '4.2.0'
    implementation platform('org.apache.logging.log4j:log4j-bom:2.20.0')
    implementation 'org.apache.logging.log4j:log4j-api'
    runtimeOnly 'org.apache.logging.log4j:log4j-core'
    implementation 'com.epam.reportportal:agent-java-testng:5.0.11'
    implementation 'com.epam.reportportal:logger-java-log4j:5.0.1'
    implementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
}

test {
    useTestNG() {
        useDefaultListeners = false
        outputDirectory = file("$buildDir/testngOutput")
        listeners = [
                "com.epam.reportportal.testng.ReportPortalTestNGListener"
        ]
        systemProperties = [
                "stage": project.findProperty("stage") ?: "qa"
        ]
    }
}

project.task([type: Test], "run-test") {
    useJUnitPlatform() {
        systemProperties = [
                "stage" : project.findProperty("stage") ?: "qa",
                "method": project.findProperty("method")
        ]
    }
}